use num::complex::Complex32;

/// Low pass filter with passband to 24kHz and stopband after 120kHz.
impl_fir!(FirstDecimFIR, Complex32, 43, [
    0.00154668443116145,
    0.00295258331595558,
    0.00282401551283514,
    0.00497155599920639,
    0.00610098362315767,
    0.00836670546836731,
    0.010370624033027,
    0.0130024563932967,
    0.0156478364743696,
    0.0186490945987046,
    0.0217086335114326,
    0.0249267550174402,
    0.0281304759778658,
    0.0313125036441076,
    0.034350304483912,
    0.0371931287552051,
    0.039745456947394,
    0.0419478712436874,
    0.0437292542910621,
    0.0450427425199215,
    0.0458457307137854,
    0.0461168675561066,
    0.0458457307137854,
    0.0450427425199215,
    0.0437292542910621,
    0.0419478712436874,
    0.039745456947394,
    0.0371931287552051,
    0.034350304483912,
    0.0313125036441076,
    0.0281304759778658,
    0.0249267550174402,
    0.0217086335114326,
    0.0186490945987046,
    0.0156478364743696,
    0.0130024563932967,
    0.010370624033027,
    0.00836670546836731,
    0.00610098362315767,
    0.00497155599920639,
    0.00282401551283514,
    0.00295258331595558,
    0.00154668443116145,
]);

/// Lowpass filter with passband to 4kHz and stopband after 24kHz.
impl_fir!(SecondDecimFIR, Complex32, 41, [
    0.000786541581019716,
    0.000597016981378991,
    0.000396862662678544,
    -0.000312286956152667,
    -0.00166769592339678,
    -0.00367323842681146,
    -0.00612849896166191,
    -0.00858650211747868,
    -0.0103599224843132,
    -0.0105876333643936,
    -0.00836071390781038,
    -0.00289204324393627,
    0.00629992821358875,
    0.0192310344426561,
    0.0353531802318487,
    0.0535477267455005,
    0.0722237127257514,
    0.0895129918243054,
    0.103533141182812,
    0.112672819907219,
    0.115846929358967,
    0.112672819907219,
    0.103533141182812,
    0.0895129918243054,
    0.0722237127257514,
    0.0535477267455005,
    0.0353531802318487,
    0.0192310344426561,
    0.00629992821358875,
    -0.00289204324393627,
    -0.00836071390781038,
    -0.0105876333643936,
    -0.0103599224843132,
    -0.00858650211747868,
    -0.00612849896166191,
    -0.00367323842681146,
    -0.00166769592339678,
    -0.000312286956152667,
    0.000396862662678544,
    0.000597016981378991,
    0.000786541581019716,
]);

/// Low pass filter with stopband after 5kHz.
impl_fir!(BandpassFIR, Complex32, 65, [
    -0.000688950539173326,
    -0.000271272708869335,
    0.000360610486496777,
    0.000982229947723125,
    0.00126258086094049,
    0.000879470070335683,
    -0.000251645052501297,
    -0.00176481589070489,
    -0.00284708653574881,
    -0.00258154720629305,
    -0.000537006495848382,
    0.00272051621608791,
    0.0055936018481377,
    0.00610551227396441,
    0.00304611596800325,
    -0.00297780164199895,
    -0.00930083227883992,
    -0.0121736606000597,
    -0.00871362455700719,
    0.00107827649329878,
    0.0134262594309668,
    0.0218473806302866,
    0.0200843720207548,
    0.0057377345707986,
    -0.0172087222758799,
    -0.0385517429310583,
    -0.0451998075491961,
    -0.0266194559311084,
    0.0198689089240754,
    0.0864477969745126,
    0.156350862018909,
    0.209347422214367,
    0.229096642489257,
    0.209347422214367,
    0.156350862018909,
    0.0864477969745126,
    0.0198689089240754,
    -0.0266194559311084,
    -0.0451998075491961,
    -0.0385517429310583,
    -0.0172087222758799,
    0.0057377345707986,
    0.0200843720207548,
    0.0218473806302866,
    0.0134262594309668,
    0.00107827649329878,
    -0.00871362455700719,
    -0.0121736606000597,
    -0.00930083227883992,
    -0.00297780164199895,
    0.00304611596800325,
    0.00610551227396441,
    0.0055936018481377,
    0.00272051621608791,
    -0.000537006495848382,
    -0.00258154720629305,
    -0.00284708653574881,
    -0.00176481589070489,
    -0.000251645052501297,
    0.000879470070335683,
    0.00126258086094049,
    0.000982229947723125,
    0.000360610486496777,
    -0.000271272708869335,
    -0.000688950539173326,
]);

#[cfg(test)]
mod tests {
    use super::*;
    use dsp::fir::FIRCoefs;

    #[test]
    fn verify_symmetry() {
        FirstDecimFIR::verify_symmetry();
        SecondDecimFIR::verify_symmetry();
        BandpassFIR::verify_symmetry();
    }
}
